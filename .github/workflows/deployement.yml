name: deploy stock back
on: [push]
env:
  IMAGE: gestion-de-produit
  VERSION: 0.0.1-SNAPSHOT
  REGISTRY: docker.io
jobs:

  create-folder:
    name: create folder
    runs-on: ubuntu-latest
    steps:
      - name: execute commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            echo "CrÃ©ation du dossier sur le serveur.."
            mkdir -p /opt/applications/stock/${{env.IMAGE}}
            echo "Liste des fichiers :"
            ls -al /opt/applications/stock/

  generate-image:
    name: Generate and push Docker image
    runs-on: ubuntu-latest
    needs: ['create-folder']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DCK_USERNAME }}
          password: ${{ secrets.DCK_PASSWORD }}

      - name: Build Docker image
        run: |
          ./mvnw spring-boot:build-image \
          -Dspring-boot.build-image.imageName=${{env.REGISTRY}}/${{secrets.DCK_USERNAME}}/${{env.IMAGE}}:${{env.VERSION}}

      - name: Push Docker image
        uses: docker/push-action@v4
        with:
          tags: ${{env.REGISTRY}}/${{secrets.DCK_USERNAME}}/${{env.IMAGE}}:${{env.VERSION}}

  run-container:
    name: Run Docker container
    runs-on: ubuntu-latest
    needs: ['create-folder', 'generate-image']
    steps:
      - name: Copy docker-compose file via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "compose.yml"
          target: /opt/applications/stock/${{env.IMAGE}}

      - name: Start Docker container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            echo DB_HOST="${{ secrets.DB_HOST }}" >> /opt/applications/stock/${{env.IMAGE}}/.env
            echo DB_USERNAME="${{ secrets.DB_USERNAME }}" >> /opt/applications/stock/${{env.IMAGE}}/.env
            echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> /opt/applications/stock/${{env.IMAGE}}/.env
            docker compose -f /opt/applications/stock/${{env.IMAGE}}/compose.yml up -d
